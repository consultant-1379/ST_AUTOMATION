 [
{"enable": true, "cmd":"kubectl get events -n eric-ccsm --sort-by='.metadata.creationTimestamp'","output":"get_events.txt"},
{"enable": true, "cmd":"kubectl -n eric-ccsm exec -it $(kubectl -n eric-ccsm get pods | grep alarm-hand | head -n 1 | awk '{print $1}') -c eric-fh-alarm-handler -- curl  http://eric-fh-alarm-handler:5005/ah/api/v0/alarms?outputFormat=FullAlarmList |jq .","output":"get_alarms.txt"},
{"enable": true, "cmd":"kubectl -n eric-ccsm get nodes ; kubectl -n eric-ccsm top nodes; ","output":"top_nodes.txt"},
{"enable": true, "cmd":"kubectl -n eric-ccsm get hpa","output":"get_hpa.txt"},
{"enable": true, "cmd":"kubectl -n eric-ccsm get pvc","output":"get_pvc.txt"},
{"enable": true, "cmd":"kubectl -n eric-ccsm top pod","output":"get_top_pod.txt"},
{"enable": true, "cmd":"kubectl -n eric-ccsm get job","output":"get_job.txt"},
{"enable": true, "cmd":"kubectl -n eric-ccsm exec -ti `kubectl get pod -n eric-ccsm -l app=eric-stm-diameter |grep -v NAME |head -n 1 |awk '{ print $1}'` -- curl -s localhost:20100/troubleshoot/transportDump/v2  |jq .  |grep -e peers -e I-conn -e originHost","output":"diameter_connections.txt"},
{"enable": true, "cmd":"echo -e 'checking if all pods are running';  kubectl  get pods --all-namespaces ; echo -e '\n' ; echo -e 'number of pods in Not Running|Completed status: ' ; kubectl get pod --all-namespaces -o wide | awk '{print $2,$4}' | grep -vE 'Running|Completed' | grep -v STATUS | wc -l","output":"monitoring_CVE_pods.txt"},
{"enable": true, "cmd":"echo -e 'checking if all containers are running';  kubectl -n eric-ccsm get po | grep -v Completed | awk -F'[ /]+' 'BEGIN{found=0} !/NAME/ {if ($2!=$3) { found=1; print $0}} END { if (!found) print \"All containers are up\"}'","output":"monitoring_CVE_containers.txt"}
]
